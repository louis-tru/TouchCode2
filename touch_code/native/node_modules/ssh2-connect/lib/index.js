// Generated by CoffeeScript 1.8.0
var camelize, fs, ssh2;

camelize = require('camelize');

fs = require('fs');

ssh2 = require('ssh2');

module.exports = function(options, callback) {
  var connect, match, privateKeyPath, retry, st;
  if (options instanceof ssh2) {
    return callback(null, options);
  }
  options = camelize(options);
  if (options.username == null) {
    options.username = process.env['USER'];
  }
  if (options.retry == null) {
    options.retry = 1;
  }
  if (!options.password && !options.privateKey) {
    if (options.privateKeyPath == null) {
      options.privateKeyPath = '~/.ssh/id_rsa';
    }
    if (options.privateKeyPath && (match = /~(\/.*)/.exec(options.privateKeyPath))) {
      options.privateKeyPath = process.env.HOME + match[1];
    }
  } else {
    options.privateKeyPath = null;
  }
  privateKeyPath = function() {
    if (!options.privateKeyPath) {
      return connect();
    }
    return fs.readFile(options.privateKeyPath, 'ascii', function(err, privateKey) {
      options.privateKey = privateKey;
      return connect();
    });
  };
  retry = options.retry;
  st = Date.now();
  connect = function() {
    var connection, succeed;
    if (retry !== true && retry > 0) {
      retry--;
    }
    succeed = false;
    connection = new ssh2();
    connection.on('error', function(err) {
      connection.end();
      if (succeed) {
        return;
      }
      if (retry === true || retry > 0) {
        return setTimeout(connect, 2000);
      } else {
        return callback(err);
      }
    });
    connection.on('ready', function() {
      succeed = true;
      return callback(null, connection);
    });
    return connection.connect(options);
  };
  return privateKeyPath();
};
